diff --git a/9wm.c b/9wm.c
index 08e0b00..0c37fe6 100644
--- a/9wm.c
+++ b/9wm.c
@@ -20,6 +20,7 @@ char *version[] = {
 };
 
 Display *dpy;
+unsigned tab;
 ScreenInfo *screens;
 int initting;
 XFontStruct *font;
@@ -168,6 +169,8 @@ main(int argc, char *argv[])
 	if (dpy == 0)
 		fatal("can't open display");
 
+	tab = XKeysymToKeycode(dpy, XK_Tab);
+
 	initting = 1;
 	XSetErrorHandler(handler);
 	if (signal(SIGTERM, sighandler) == SIG_IGN)
diff --git a/client.c b/client.c
index acae735..fcbd487 100644
--- a/client.c
+++ b/client.c
@@ -151,6 +151,7 @@ getclient(Window w, int create)
 	c->wmcmaps = 0;
 	c->next = clients;
 	clients = c;
+	numvisible++;
 	return c;
 }
 
@@ -200,6 +201,7 @@ rmclient(Client * c)
 		XFree((char *) c->class);
 	memset(c, 0, sizeof(Client));	/* paranoia */
 	free(c);
+	numvisible--;
 }
 
 #ifdef	DEBUG
diff --git a/dat.h b/dat.h
index 7dd2e69..db0a3c8 100644
--- a/dat.h
+++ b/dat.h
@@ -97,6 +97,7 @@ enum {
 
 /* main.c */
 extern Display		*dpy;
+extern unsigned		tab;
 extern ScreenInfo	*screens;
 extern int		num_screens;
 extern int		initting;
@@ -134,6 +135,7 @@ extern Client		*current;
 /* menu.c */
 extern Client		*hiddenc[];
 extern int 		numhidden;
+extern int 		numvisible;
 extern char 		*b3items[];
 extern Menu 		b3menu;
 
diff --git a/event.c b/event.c
index 85a1c27..1de71bc 100644
--- a/event.c
+++ b/event.c
@@ -18,6 +18,7 @@ mainloop(int shape_event)
 	XEvent ev;
 
 	for (;;) {
+		XGrabKey(dpy, AnyKey, Mod1Mask, DefaultRootWindow(dpy), False, GrabModeAsync, GrabModeAsync);
 		getevent(&ev);
 
 #ifdef	DEBUG_EV
@@ -35,6 +36,12 @@ mainloop(int shape_event)
 #endif
 				fprintf(stderr, "9wm: unknown ev.type %d\n", ev.type);
 			break;
+		case KeyPress:
+			key(&ev.xkey);
+			XUngrabKey(dpy, AnyKey, Mod1Mask, DefaultRootWindow(dpy));
+			break;
+		case KeyRelease:
+			break;
 		case ButtonPress:
 			button(&ev.xbutton);
 			break;
diff --git a/fns.h b/fns.h
index d3ead2d..f61f6c2 100644
--- a/fns.h
+++ b/fns.h
@@ -56,6 +56,7 @@ void	gettrans();
 
 /* menu.c */
 void	button();
+void	key();
 void	spawn();
 void	reshape();
 void	move();
diff --git a/menu.c b/menu.c
index 5734b30..448f1d8 100644
--- a/menu.c
+++ b/menu.c
@@ -16,6 +16,7 @@
 Client *hiddenc[MAXHIDDEN];
 
 int numhidden;
+int numvisible;
 
 char *b3items[B3FIXED + MAXHIDDEN + 1] = {
 	"New",
@@ -103,6 +104,48 @@ button(XButtonEvent * e)
 		cmapfocus(current);
 }
 
+void
+key(XKeyEvent * e)
+{
+	Client *c;
+	Window dw;
+	ScreenInfo *s;
+
+	curtime = e->time;
+	s = getscreen(e->root);
+	if (s == 0)
+		return;
+	c = getclient(e->window, 0);
+	if (c) {
+		e->x += c->x - BORDER + 1;
+		e->y += c->y - BORDER + 1;
+	} else if (e->window != e->root)
+		XTranslateCoordinates(dpy, e->window, s->root, e->x, e->y, &e->x, &e->y, &dw);
+
+	do {
+		if (e->keycode == tab) {
+			if ((e->state & (Mod1Mask | ShiftMask)) == (Mod1Mask | ShiftMask)) {
+				unhide(0,1); /* alt+shift+tab unhides clients */
+			} else if ((e->state & Mod1Mask) == Mod1Mask) {
+				if (numvisible <= 2 && numhidden == 0) { /* if <=1 window visible - do nothing */
+				} else if (current == 0) {
+					unhide(numhidden-1, 1);
+				} else if (numvisible == 2) { /* create client adds to numvisible; init creates 2 clients */
+					hide(current);
+					unhide(numhidden-1, 1);
+				} else {
+					hide(current);
+				}
+			}
+			if (current && current->screen == s)
+				cmapfocus(current);
+		} else {
+			break;
+		}
+		getevent(e);
+	} while(e->type == KeyPress && (e->state & Mod1Mask) == (Mod1Mask));
+}
+
 void
 spawn(ScreenInfo * s, char *prog)
 {
@@ -196,6 +239,8 @@ hide(Client * c)
 	hiddenc[0] = c;
 	b3items[B3FIXED] = c->label;
 	numhidden++;
+	numvisible--;
+	numvisible = numvisible > 0 ? numvisible : 0;
 }
 
 void
@@ -223,6 +268,7 @@ unhide(int n, int map)
 	}
 
 	numhidden--;
+	numvisible++;
 	for (i = n; i < numhidden; i++) {
 		hiddenc[i] = hiddenc[i + 1];
 		b3items[B3FIXED + i] = b3items[B3FIXED + i + 1];
